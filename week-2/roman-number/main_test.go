package main

import "testing"

func Test_romanizer(t *testing.T) {
	type args struct {
		n int
	}
	tests := []struct {
		name string
		args args
		want string
	}{
		{name: "1  should equal to I", args: args{n: 1}, want: "I"},
		{name: "2  should equal to II", args: args{n: 2}, want: "II"},
		{name: "3  should equal to III", args: args{n: 3}, want: "III"},
		{name: "4  should equal to IV", args: args{n: 4}, want: "IV"},
		{name: "5  should equal to V", args: args{n: 5}, want: "V"},
		{name: "6  should equal to VI", args: args{n: 6}, want: "VI"},
		{name: "7  should equal to VII", args: args{n: 7}, want: "VII"},
		{name: "8  should equal to VIII", args: args{n: 8}, want: "VIII"},
		{name: "9  should equal to IX", args: args{n: 9}, want: "IX"},
		{name: "10 should equal to X", args: args{n: 10}, want: "X"},
		{name: "11 should equal to XI", args: args{n: 11}, want: "XI"},
		{name: "12 should equal to XII", args: args{n: 12}, want: "XII"},
		{name: "13 should equal to XIII", args: args{n: 13}, want: "XIII"},
		{name: "14 should equal to XIV", args: args{n: 14}, want: "XIV"},
		{name: "15 should equal to XV", args: args{n: 15}, want: "XV"},
		{name: "16 should equal to XVI", args: args{n: 16}, want: "XVI"},
		{name: "17 should equal to XVII", args: args{n: 17}, want: "XVII"},
		{name: "18 should equal to XVIII", args: args{n: 18}, want: "XVIII"},
		{name: "19 should equal to XIX", args: args{n: 19}, want: "XIX"},
		{name: "20 should equal to XX", args: args{n: 20}, want: "XX"},
		{name: "21 should equal to XXI", args: args{n: 21}, want: "XXI"},
		{name: "22 should equal to XXII", args: args{n: 22}, want: "XXII"},
		{name: "23 should equal to XXIII", args: args{n: 23}, want: "XXIII"},
		{name: "24 should equal to XXIV", args: args{n: 24}, want: "XXIV"},
		{name: "25 should equal to XXV", args: args{n: 25}, want: "XXV"},
		{name: "26 should equal to XXVI", args: args{n: 26}, want: "XXVI"},
		{name: "27 should equal to XXVII", args: args{n: 27}, want: "XXVII"},
		{name: "28 should equal to XXVIII", args: args{n: 28}, want: "XXVIII"},
		{name: "29 should equal to XXIX", args: args{n: 29}, want: "XXIX"},
		{name: "30 should equal to XXX", args: args{n: 30}, want: "XXX"},
		{name: "31 should equal to XXXI", args: args{n: 31}, want: "XXXI"},
		{name: "32 should equal to XXXII", args: args{n: 32}, want: "XXXII"},
		{name: "33 should equal to XXXIII", args: args{n: 33}, want: "XXXIII"},
		{name: "34 should equal to XXXIV", args: args{n: 34}, want: "XXXIV"},
		{name: "35 should equal to XXXV", args: args{n: 35}, want: "XXXV"},
		{name: "36 should equal to XXXVI", args: args{n: 36}, want: "XXXVI"},
		{name: "37 should equal to XXXVII", args: args{n: 37}, want: "XXXVII"},
		{name: "38 should equal to XXXVIII", args: args{n: 38}, want: "XXXVIII"},
		{name: "39 should equal to XXXIX", args: args{n: 39}, want: "XXXIX"},
		{name: "40 should equal to XL", args: args{n: 40}, want: "XL"},
		{name: "41 should equal to XLI", args: args{n: 41}, want: "XLI"},
		{name: "42 should equal to XLII", args: args{n: 42}, want: "XLII"},
		{name: "43 should equal to XLIII", args: args{n: 43}, want: "XLIII"},
		{name: "44 should equal to XLIV", args: args{n: 44}, want: "XLIV"},
		{name: "45 should equal to XLV", args: args{n: 45}, want: "XLV"},
		{name: "46 should equal to XLVI", args: args{n: 46}, want: "XLVI"},
		{name: "47 should equal to XLVII", args: args{n: 47}, want: "XLVII"},
		{name: "48 should equal to XLVIII", args: args{n: 48}, want: "XLVIII"},
		{name: "49 should equal to XLIX", args: args{n: 49}, want: "XLIX"},
		{name: "50 should equal to L", args: args{n: 50}, want: "L"},
		{name: "51 should equal to LI", args: args{n: 51}, want: "LI"},
		{name: "52 should equal to LII", args: args{n: 52}, want: "LII"},
		{name: "53 should equal to LIII", args: args{n: 53}, want: "LIII"},
		{name: "54 should equal to LIV", args: args{n: 54}, want: "LIV"},
		{name: "55 should equal to LV", args: args{n: 55}, want: "LV"},
		{name: "56 should equal to LVI", args: args{n: 56}, want: "LVI"},
		{name: "57 should equal to LVII", args: args{n: 57}, want: "LVII"},
		{name: "58 should equal to LVIII", args: args{n: 58}, want: "LVIII"},
		{name: "59 should equal to LIX", args: args{n: 59}, want: "LIX"},
		{name: "60 should equal to LX", args: args{n: 60}, want: "LX"},
		{name: "61 should equal to LXI", args: args{n: 61}, want: "LXI"},
		{name: "62 should equal to LXII", args: args{n: 62}, want: "LXII"},
		{name: "63 should equal to LXIII", args: args{n: 63}, want: "LXIII"},
		{name: "64 should equal to LXIV", args: args{n: 64}, want: "LXIV"},
		{name: "65 should equal to LXV", args: args{n: 65}, want: "LXV"},
		{name: "66 should equal to LXVI", args: args{n: 66}, want: "LXVI"},
		{name: "67 should equal to LXVII", args: args{n: 67}, want: "LXVII"},
		{name: "68 should equal to LXVIII", args: args{n: 68}, want: "LXVIII"},
		{name: "69 should equal to LXIX", args: args{n: 69}, want: "LXIX"},
		{name: "70 should equal to LXX", args: args{n: 70}, want: "LXX"},
		{name: "71 should equal to LXXI", args: args{n: 71}, want: "LXXI"},
		{name: "72 should equal to LXXII", args: args{n: 72}, want: "LXXII"},
		{name: "73 should equal to LXXIII", args: args{n: 73}, want: "LXXIII"},
		{name: "74 should equal to LXXIV", args: args{n: 74}, want: "LXXIV"},
		{name: "75 should equal to LXXV", args: args{n: 75}, want: "LXXV"},
		{name: "76 should equal to LXXVI", args: args{n: 76}, want: "LXXVI"},
		{name: "77 should equal to LXXVII", args: args{n: 77}, want: "LXXVII"},
		{name: "78 should equal to LXXVIII", args: args{n: 78}, want: "LXXVIII"},
		{name: "79 should equal to LXXIX", args: args{n: 79}, want: "LXXIX"},
		{name: "80 should equal to LXXX", args: args{n: 80}, want: "LXXX"},
		{name: "81 should equal to LXXXI", args: args{n: 81}, want: "LXXXI"},
		{name: "82 should equal to LXXXII", args: args{n: 82}, want: "LXXXII"},
		{name: "83 should equal to LXXXIII", args: args{n: 83}, want: "LXXXIII"},
		{name: "84 should equal to LXXXIV", args: args{n: 84}, want: "LXXXIV"},
		{name: "85 should equal to LXXXV", args: args{n: 85}, want: "LXXXV"},
		{name: "86 should equal to LXXXVI", args: args{n: 86}, want: "LXXXVI"},
		{name: "87 should equal to LXXXVII", args: args{n: 87}, want: "LXXXVII"},
		{name: "88 should equal to LXXXVIII", args: args{n: 88}, want: "LXXXVIII"},
		{name: "89 should equal to LXXXIX", args: args{n: 89}, want: "LXXXIX"},
		{name: "90 should equal to XC", args: args{n: 90}, want: "XC"},
		{name: "91 should equal to XCI", args: args{n: 91}, want: "XCI"},
		{name: "92 should equal to XCII", args: args{n: 92}, want: "XCII"},
		{name: "93 should equal to XCIII", args: args{n: 93}, want: "XCIII"},
		{name: "94 should equal to XCIV", args: args{n: 94}, want: "XCIV"},
		{name: "95 should equal to XCV", args: args{n: 95}, want: "XCV"},
		{name: "96 should equal to XCVI", args: args{n: 96}, want: "XCVI"},
		{name: "97 should equal to XCVII", args: args{n: 97}, want: "XCVII"},
		{name: "98 should equal to XCVIII", args: args{n: 98}, want: "XCVIII"},
		{name: "99 should equal to XCIX", args: args{n: 99}, want: "XCIX"},
		{name: "100 should equal to C", args: args{n: 100}, want: "C"},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			if got := romanizer(tt.args.n); got != tt.want {
				t.Errorf("romanizer() = %v, want %v", got, tt.want)
			}
		})
	}
}
